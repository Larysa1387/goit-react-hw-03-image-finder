{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","services/imageApi/imageApi.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","api","fetchImage","searchQuery","page","fetch","then","res","ok","json","Promise","reject","Error","Searchbar","state","handleInputChange","e","value","currentTarget","setState","toLowerCase","handleSubmit","event","preventDefault","trim","props","onSubmit","toast","warn","className","s","SearchForm","this","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","largeImage","modalOpen","onClick","src","alt","ImageGalleryItem_image","ImageGallery","images","map","id","largeImageURL","LoaderEffect","Loader","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","modalClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","App","loading","error","showModal","searchImagesFetch","imageAPI","imagesArr","checkNewFetchImages","hits","catch","finally","prevState","handleFormSubmit","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","autoClose","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9da32482.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__38Png\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__utDtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1ePxQ\",\"Modal\":\"Modal_Modal__U1WtC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__30ItO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__LsPKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Gc2Dt\"};","const KEY = '21781686-06f0d55f145dff9dbbb393fb1';\r\n\r\nfunction fetchImage(searchQuery, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error('There is no data'));\r\n  });\r\n}\r\nconst api = { fetchImage };\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({searchQuery:value.toLowerCase()});\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.searchQuery.trim() === '') {\r\n      toast.warn('Tipe your query!');\r\n      return\r\n    }\r\n    this.props.onSubmit(this.state.searchQuery);\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchForm_button}>\r\n            <span className={s.SearchForm_button_label}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchForm_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  tags,\r\n\r\n  largeImage,\r\n  modalOpen,\r\n}) => {\r\n  const sendLargeImage = () => {\r\n    modalOpen(largeImage);\r\n  };\r\n  return (\r\n    <li className={s.ImageGalleryItem}  onClick={sendLargeImage}>\r\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItem_image} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  modalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\n\r\nconst ImageGallery = ({ images, modalOpen }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ webformatURL, tags, id, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          webformatURL={webformatURL}\r\n          largeImage={largeImageURL}\r\n          tags={tags}\r\n          key={id}\r\n          modalOpen={modalOpen}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf( PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n  modalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, {Component} from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nclass LoaderEffect extends Component {\r\n  state = {  }\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={s.Loader}\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={150}\r\n        width={150}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoaderEffect;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = { onClick: PropTypes.func.isRequired };\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.modalClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={this.props.largeImage} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  modalClose: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport imageAPI from './services/imageApi/imageApi.jsx';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from './components/Loader';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    largeImage: '',\n    loading: false,\n    error: null,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.searchImagesFetch();\n    }\n    else if (this.state.page !== 1) {\n        window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  searchImagesFetch = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ loading: true });\n    imageAPI\n      .fetchImage(searchQuery, page)\n      .then((imagesArr) => this.checkNewFetchImages(imagesArr.hits))\n      .catch((error) => this.setState({ error }))\n      .finally(() =>\n        this.setState({ loading: false }),\n      );\n  };\n\n  checkNewFetchImages = (imagesArr) => {\n    imagesArr === []\n      ? this.setState({\n        images: imagesArr,\n        page:1,\n        })\n      : this.setState((prevState) => ({\n          images: [...prevState.images, ...imagesArr],\n          page: prevState.page + 1,\n        }));\n  };\n\n  handleFormSubmit = (searchQuery) => {\n    this.setState({\n      searchQuery,\n      images: [],\n      page: 1,\n      error:null,\n    });\n  };\n\n  // onClickLoadMore = () => {\n  //   this.searchImagesFetch();\n  //   this.scrollGallery();\n  // };\n\n  // scrollGallery = () => {\n  //   setTimeout(() => {\n  //     window.scrollTo({\n  //       top: document.documentElement.scrollHeight,\n  //       behavior: 'smooth',\n  //     });\n  //   }, 500);\n  // };\n\n  modalOpen = (largeImage) => {\n    this.setState({\n      showModal: true,\n      largeImage,\n    });\n  };\n\n  modalClose = () => {\n    this.setState({\n      showModal: false,\n      largeImage: '',\n    });\n  };\n\n  render() {\n    const { loading, error, images, showModal, largeImage } = this.state;\n    return (\n      <div>\n        <ToastContainer autoClose={3000} />\n        {error && <h1>error.message</h1>}\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        {images && <ImageGallery images={images} modalOpen={this.modalOpen} />}\n        {showModal && (\n          <Modal modalClose={this.modalClose} largeImage={largeImage} />\n        )}\n        {loading && <Loader />}\n        {images.length !== 0 && <Button onClick={this.searchImagesFetch} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1gbtc\",\"SearchForm\":\"Searchbar_SearchForm__1lFwd\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3aGE7\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__39rhi\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3xWxn\"};"],"sourceRoot":""}